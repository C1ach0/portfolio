name: CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Login to VPN + Build + Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install WireGuard
        run: sudo apt-get update && sudo apt-get install -y wireguard

      - name: Configure VPN
        run: |
          echo "${{ secrets.VPN_CONF }}" > wg0.conf
          sudo mv wg0.conf /etc/wireguard/wg0.conf
          sudo chmod 600 /etc/wireguard/wg0.conf
          sudo wg-quick up wg0
          
      - name: Check VPN IP
        run: ip addr show wg0

      - name: Check repo
        uses: actions/checkout@v4

      - name: Allow insecure Docker registry
        run: |
          sudo mkdir -p /etc/docker
          echo '{"insecure-registries":["${{ secrets.REGISTRY }}"]}' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      - name: Login to Docker Registry
        run: echo ${{ secrets.DOCKER_REGISTRY_PASSWORD }} | docker login ${{ secrets.REGISTRY }} -u ${{ secrets.DOCKER_REGISTRY_USER }} --password-stdin

      - name: Set Git SHA
        id: vars
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.REGISTRY }}/portfolio:latest \
                       -t ${{ secrets.REGISTRY }}/portfolio:${GIT_SHA} ./website
                       
      - name: Login to Docker Registry
        run: echo ${{ secrets.DOCKER_REGISTRY_PASSWORD }} | docker login ${{ secrets.REGISTRY }} -u ${{ secrets.DOCKER_REGISTRY_USER }} --password-stdin

      - name: Push Docker image (latest)
        run: docker push ${{ secrets.REGISTRY }}/portfolio:latest

      - name: Push Docker image (SHA)
        run: docker push ${{ secrets.REGISTRY }}/portfolio:${GIT_SHA}

      - name: Trigger Coolify Auto Deploy
        run: |
          curl -X POST "${{ secrets.COOLIFY_URL }}/api/services/k0gcckks8ggooso4kkcgo0o0/restart?latest=true" \
            -H "Authorization: Bearer ${{ secrets.COOLIFY_API_TOKEN }}"